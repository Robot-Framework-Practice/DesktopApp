<Window x:Class="Đồ_án.View.FogotPassWord"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Đồ_án.View"
        
        
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:components="clr-namespace:Đồ_án.Components"
        xmlns:utils="clr-namespace:Đồ_án.ViewModel.Login"
        
        
        mc:Ignorable="d"
        Title="FogotPassWord" 
        Height="380" Width="300"
        
        ResizeMode="NoResize" WindowStyle="None" AllowsTransparency="True" Background="Black" WindowStartupLocation="CenterScreen">



    <Canvas x:Name="mainLogin" DataContext="{StaticResource LoginViewModel}">
        <StackPanel Margin="10">
            <Label Content="PASSWORD" FontFamily="Segoe UI Black" FontSize="24" Margin="0,10" Foreground="White" VerticalAlignment="Top" HorizontalAlignment="Center"/>

            <StackPanel Margin="0,15" Orientation="Horizontal">
                <materialDesign:PackIcon Kind="Email" VerticalAlignment="Center" Foreground="#999999"/>
                <TextBox x:Name="focusFirstTextBox" Foreground="White" materialDesign:HintAssist.Hint="Email" Width="250" Margin="5" Text="{Binding Gmail , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}">
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder />
                                <TextBlock Foreground="Red" Text="{Binding ErrorContent}" Width="250" TextWrapping="Wrap" />
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>
            </StackPanel>
            <Grid Margin="0,0,0,15">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="ShieldKey" VerticalAlignment="Center" Foreground="#999999"/>
                    <TextBox x:Name="OTPTextBox" Foreground="White" materialDesign:HintAssist.Hint="OTP code" Width="250" Margin="5" Text="{Binding OTPInView , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder />
                                    <TextBlock Foreground="Red" Text="{Binding ErrorContent}" Width="250" TextWrapping="Wrap" />
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                </StackPanel>
                <Button
                        x:Name="SendCodeBtn"
                        Width="Auto"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        
                        Command="{Binding GetOTPCodeCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <TextBlock                                    
                                    Margin="0,0,16,0"
                                    VerticalAlignment="Center"
                                    FontSize="16">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="Send Code"/>
                                        <Setter Property="Foreground" Value="#999999" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsGetCode}" Value="True" />
                                                    <Condition Binding="{Binding TimeCountDown, Converter={utils:IsNullConverter}}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Text" Value="{Binding TimeCountDown}" />
                                                <Setter Property="Foreground" Value="#999999" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsGetCode}" Value="True" />
                                                    <Condition Binding="{Binding TimeCountDown, Converter={utils:IsNullConverter}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Text" Value="Try Again" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsGetCode}" Value="True" />
                                        <Condition Binding="{Binding TimeCountDown, Converter={utils:IsNullConverter}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon Kind="Key" VerticalAlignment="Center" Foreground="#999999"/>
                <components:BindablePasswordBox x:Name="NewPassEdit" Password="{Binding NewPassWord, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Foreground="White" TextPasswordBox="New Password">
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder />
                                <TextBlock Foreground="Red" Text="{Binding ErrorContent}" Width="250" TextWrapping="Wrap" />
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </components:BindablePasswordBox>
            </StackPanel>
            <StackPanel Margin="0,15,0,30" Orientation="Horizontal">
                <materialDesign:PackIcon Kind="Key" VerticalAlignment="Center" Foreground="#999999"/>
                <components:BindablePasswordBox x:Name="ConfirmPassEdit" Password="{Binding ConfirmNewPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="White" TextPasswordBox="Confirm New Password">
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder />
                                <TextBlock Foreground="Red" Text="{Binding ErrorContent}" Width="250" TextWrapping="Wrap" />
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </components:BindablePasswordBox>
            </StackPanel>
            <Grid Visibility="{Binding IsRegister, Converter={StaticResource InverseVisibilityConverter}}" Margin="0,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="94*"/>
                    <ColumnDefinition Width="183*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Don't get OTP code?" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="60,0,0,0" Foreground="#999999" Grid.Column="1">
                    <TextBlock.InputBindings>
                        <MouseBinding Command="" MouseAction="LeftClick" />
                    </TextBlock.InputBindings>
                </TextBlock>
            </Grid>
            <Button x:Name="ConfirmBtn" IsDefault="True" HorizontalAlignment="Center" Content="CONFIRM" FontFamily="Impact" FontSize="18" Width="100" Background="#f0f0f0" BorderBrush="#FF307CD6" Foreground="Black" Command="{Binding ConFirmCommand}"/>
        </StackPanel>


        <Button Canvas.Top="10" Canvas.Right="10" Background="Transparent" BorderThickness="0" Command="{Binding CloseFogotPassWordWindow}">
            <materialDesign:PackIcon Kind="CloseBox" VerticalAlignment="Center" Foreground="White"/>
        </Button>
    </Canvas>


</Window>
